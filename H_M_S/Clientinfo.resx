<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>